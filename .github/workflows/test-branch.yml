name: Backend Build and Push (For main)

on: # 워크플로우가 언제 실행되는지 정의 (like 조건문)
  push:
    branches:
      - SJ-67--build-CI-pipeline # 지정한 브랜치로 Push 했을 때
  pull_request:
    branches:
      - SJ-67--build-CI-pipeline # 지정한 브랜치로 PR 후 Merge 됐을 때

env:
  REGISTRY: docker.io
  IMAGE_NAME: gonghak-was
  AWS_S3_BUCKET_NAME: ${{ secrets.AWS_S3_BUCKET_NAME }} # S3 버킷 이름
  AWS_CODE_DEPLOY_NAME: gonghak-codedeploy # CodeDeploy 애플리케이션 이름
  AWS_CODE_DEPLOY_GROUP: production # CodeDeploy 배포 그룹 이름
  AWS_REGION_NAME: ap-northeast-2 # AWS 리전 이름

jobs: # 해당 워크플로우에서 어떤 일이 수행되어야 하는지 정의 (like 조건문의 본문)
  image-build-and-push:
    # 가장 최신 버전의 우분투를 러너(Github Actions 실행 환경)로 설정
    runs-on: ubuntu-latest # 상세 작업에 필수적으로 들어가야 하는 항목 : 어느 환경에서 실행되어야 하는지 정의

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4 # 현재 리포지토리로 체크아웃

      - name: Create Properties For Test
        run: |
          touch ./src/test/resources/application.properties
          echo "${{ secrets.TEST_PROPERTIES }}" >> ./src/test/resources/application.properties
          cat ./src/test/resources/application.properties

      - name: Set up Docker Buildx # 멀티 플랫폼 빌드와 캐시 활용을 할 수 있는 도커 빌드X 설치
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }} # Github Secret에서 Docker hub 사용자 이름을 가져옴
          password: ${{ secrets.DOCKERHUB_TOKEN }} # Github Secret에서 Docker hub 액세스 토큰을 가져옴

      - name: Set Up MySQL For Test
        uses: mirromutth/mysql-action@v1.1
        with:
          host port: 3306
          container port: 3306
          mysql database: 'jpa_prac'
          mysql root password: 1234

      - name: Build and Push
        uses: docker/build-push-action@v5
        with:
          context: ./ # Dockerfile의 경로
          file: ./Dockerfile # Dockerfile 이름
          push: true # 이미지를 레지스트리에 푸쉬
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{ github.sha }} # 커밋 아이디로 태그 지정
          platforms: linux/amd64,linux/arm64 # 빌드된 이미지가 여러 환경에서 호환될 수 있도록 아키텍처 명시
